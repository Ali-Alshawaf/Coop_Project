@model CoopProj.Models.ApplyStudent

@{
    ViewData["Title"] = "Details";

}


<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <a asp-action="Index" style="font-size: 35px;">
                    <i class="fe-arrow-left"></i>
                </a>                
                <hr />
                <dl class="row">
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Students)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Students.Name)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Requests)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Requests.Application)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Information)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Information)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.GPA)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.GPA)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.RequestTime)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.RequestTime)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Status)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Status)
                    </dd>
                    @if (Model.Status == "Waiting")
                    {
                        <div class="row">
                            <div class="col-sm-2">
                                <p><strong>Request State</strong></p>
                            </div>

                            <div class="col-1">
                                <form id="acceptForm" method="post">
                                    <input type="hidden" asp-for="Id" />
                                    <button type="button" onclick="showConfirmation('Are you sure you want to accept this application?', 'Accept');" class="btn btn-outline-success">Accept</button>
                                </form>
                            </div>

                            <div class="col-3">
                                <form id="rejectForm" method="post">
                                    <input type="hidden" asp-for="Id" />
                                    <button type="button" onclick="showConfirmation('Are you sure you want to reject this application?', 'Reject');" class="btn btn-outline-danger">Reject</button>
                                </form>
                            </div>
                        </div>
                    }
                </dl>
                <!-- Display file content -->
                <!-- Display CV file -->
                @if (ViewData["filenotfound"] == null)
                {
                    @if (!string.IsNullOrEmpty(ViewData["FileContent"] as string))
                    {
                        <h1>CV File</h1>
                        <embed src="data:application/pdf;base64,@ViewData["FileContent"]" width="100%" height="600px" type="application/pdf"></embed>
                    }

                }
                else
                {
                    <h2>@ViewData["filenotfound"]</h2>
                }



                @if (ViewData["Letternotfound"] == null)
                {
                    <!-- Display letter file -->
                    @if (!string.IsNullOrEmpty(ViewData["LetterContent"] as string))
                    {
                        <h1>Letter File</h1>
                        <embed src="data:application/pdf;base64,@ViewData["LetterContent"]" width="100%" height="600px" type="application/pdf"></embed>
                    }
                }
                else
                {
                    <h2>@ViewData["Letternotfound"]</h2>
                }

                @if (ViewData["Transcriptnotfound"] == null)
                {
                    @if (!string.IsNullOrEmpty(ViewData["TranscriptContent"] as string))
                    {
                        <h1>Transcript File</h1>
                        <embed src="data:application/pdf;base64,@ViewData["TranscriptContent"]" width="100%" height="600px" type="application/pdf"></embed>
                    }
                }
                else
                {
                    <h2>@ViewData["Transcriptnotfound"]</h2>
                }

                <br />
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById('acceptForm').addEventListener('submit', function (event) {
        event.preventDefault(); // Prevent the default form submission

        var id = document.querySelector('input[name="Id"]').value;
        acceptApplication(id);
    });

    document.getElementById('rejectForm').addEventListener('submit', function (event) {
        event.preventDefault(); // Prevent the default form submission

        var id = document.querySelector('input[name="Id"]').value;
        rejectApplication(id);
    });

    function showConfirmation(message, action) {
        Swal.fire({
            title: 'Are you sure?',
            icon: 'question',
            text: message,
            showCancelButton: true,
            confirmButtonText: 'Yes',
            cancelButtonText: 'Cancel',
            showCloseButton: true
        }).then((result) => {
            if (result.isConfirmed) {
                var id = document.querySelector('input[name="Id"]').value;
                if (action === 'Accept') {
                    acceptApplication(id);
                } else if (action === 'Reject') {
                    rejectApplication(id);
                }
            }
        });
    }

    function acceptApplication(id) {
        fetch('/ApplyStudentsCompany/Accept/' + id, {
            method: 'POST'
        }).then((response) => {
            if (response.ok) {
                window.location.href = '/ApplyStudentsCompany/Details/' + id;
            } else {
                console.log('Error accepting application');
            }
        }).catch((error) => {
            console.log('Error accepting application:', error);
        });
    }

    function rejectApplication(id) {
        fetch('/ApplyStudentsCompany/Reject/' + id, {
            method: 'POST'
        }).then((response) => {
            if (response.ok) {
                window.location.href = '/ApplyStudentsCompany/Details/' + id;
            } else {
                console.log('Error rejecting application');
            }
        }).catch((error) => {
            console.log('Error rejecting application:', error);
        });
    }
</script>